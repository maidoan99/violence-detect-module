/* Autogenerated with kurento-module-creator */

#include "ViolenceDetectionModule.hpp"
#include <mutex>

namespace kurento
{
namespace module
{
namespace violencedetectionmodule
{

static std::vector<std::string> hierarchyViolenceDetectionModule;
std::once_flag initFlagViolenceDetectionModule;

static void
initHierarchy ()
{
  hierarchyViolenceDetectionModule.emplace_back("kurento.OpenCVFilter");
  hierarchyViolenceDetectionModule.emplace_back("kurento.Filter");
  hierarchyViolenceDetectionModule.emplace_back("kurento.MediaElement");
  hierarchyViolenceDetectionModule.emplace_back("kurento.MediaObject");
}

const std::vector<std::string> &
ViolenceDetectionModule::getHierarchy () const
{
  std::call_once (initFlagViolenceDetectionModule,initHierarchy);
  return hierarchyViolenceDetectionModule;
}

const std::string&
ViolenceDetectionModule::getType () const {
  static std::string typeName = "ViolenceDetectionModule";

  return typeName;
}

const std::string&
ViolenceDetectionModule::getQualifiedType () const {
  static std::string qualifiedTypeName = getModule() + "." + getType();

  return qualifiedTypeName;
}

const std::string&
ViolenceDetectionModule::getModule () const {
  static std::string moduleName =  "violencedetectionmodule";

  return moduleName;
}

} /* violencedetectionmodule */
} /* module */
} /* kurento */
